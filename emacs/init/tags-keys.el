;; keybindings for rtags and gtags

(when (require 'rtags nil 'noerror)
  (defvar rtags-is-installed t))

(defun use-rtags ()
  (and (boundp 'rtags-is-installed)
       (rtags-executable-find "rc")
       (rtags-is-indexed)))

(defun tags-find-symbol-at-point ()
  (interactive)
  (call-interactively (if (use-rtags) 'rtags-find-symbol-at-point 'helm-gtags-find-tag-from-here)))
(defun tags-find-references-at-point ()
  (interactive)
  (call-interactively (if (use-rtags) 'rtags-find-references-at-point 'helm-gtags-find-rtag)))
(defun tags-find-symbol ()
  (interactive)
  (call-interactively (if (use-rtags) 'rtags-find-symbol 'helm-gtags-find-symbol)))
(defun tags-find-references ()
  (interactive)
  (call-interactively (if (use-rtags) 'rtags-find-references 'helm-gtags-find-rtag)))
(defun tags-find-file ()
  (interactive)
  (call-interactively (if (use-rtags) 'rtags-find-file 'helm-gtags-find-files)))
(defun tags-imenu ()
  (interactive)
  (call-interactively (if (use-rtags) 'rtags-imenu 'helm-gtags-parse-file)))
(defun tags-location-stack-back ()
  (interactive)
  (call-interactively (if (use-rtags) 'rtags-location-stack-back 'helm-gtags-previous-history)))
(defun tags-location-stack-forward ()
  (interactive)
  (call-interactively (if (use-rtags) 'rtags-location-stack-forward 'helm-gtags-next-history)))
(defun tags-pop-stack ()
  (interactive)
  (call-interactively (if (use-rtags) 'rtags-location-stack-back 'helm-gtags-pop-stack)))

(with-eval-after-load 'cc-mode
  (define-key c-mode-base-map (kbd "M-t") (function tags-find-symbol-at-point))
  (define-key c-mode-base-map (kbd "M-r") (function tags-find-references-at-point))
  (define-key c-mode-base-map (kbd "M-s") (function tags-find-symbol))
  (define-key c-mode-base-map (kbd "M-R") (function tags-find-references))
  (define-key c-mode-base-map (kbd "M-.") (function rtags-find-virtuals-at-point))
  (define-key c-mode-base-map (kbd "C-t") (function tags-pop-stack))
  (define-key c-mode-base-map (kbd "C-c <") (function tags-location-stack-back))
  (define-key c-mode-base-map (kbd "C-c >") (function tags-location-stack-forward))
  (define-key c-mode-base-map (kbd "M-m") (function tags-imenu)))
